{"version":3,"sources":["components/Firebase.js","components/Form.js","components/Landing.js","components/Search.js","components/ShowMovies.js","components/Pagination.js","components/MovieDetails.js","components/LastFiveMovies.js","components/FormUpdate.js","components/UploadImage.js","components/RelatedMovies.js","components/App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Form","props","timestamp","FieldValue","serverTimestamp","useState","movieTitle","setMovieTitle","movieDescription","setMovieDescription","setData","cover","setCover","relatedMoviesArray","setRelatedMoviesArray","ref","collection","useEffect","onSnapshot","querySnapshot","items","forEach","doc","push","data","relatedMovieId","map","relatedMovie","id","relatedMoviesList","className","title","onSubmit","event","preventDefault","newMovie","uuidv4","tag","createdAt","set","then","alert","catch","error","message","htmlFor","type","placeholder","value","onChange","ev","target","Landing","Search","searchedMovies","searchMovies","movie","to","name","movieName","handleSearchMovie","ShowMovies","moviesToShow","dataToShow","description","substring","onClick","window","confirm","delete","pageNumbers","i","Math","ceil","totalMovies","moviePerPage","pageNumber","number","paginate","href","MovieDetails","finalmovies","finalMovie","movieFound","finalRelatedMovie","src","LastFiveMovies","slider","slice","max","length","lastmovie","FormUpdate","updatedMovie","update","UploadImage","image","setImage","console","log","files","FormData","append","fetch","method","body","resp","json","url","RelatedMovies","setClicked","handleClickedMovie","clickedMovieId","currentTarget","relatedMoviesIndex","findIndex","relatedMovies","find","newRelatedMoviesArray","splice","clickedMovie","undefined","clickedMovies","App","setmovieName","currentPage","setCurrentPage","unsubscribe","orderBy","filter","movieSearched","toLowerCase","includes","indexOfLastMovie","indexOfFirstMovie","currentMovie","exact","path","inputKey","inputValue","Pagination","render","routerProps","routerMovieId","match","params","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5c9d9e54.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyA20IZyEhXb8tavglTimWjgc5TUelxMz5s',\r\n  authDomain: 'prueba-h-b5099.firebaseapp.com',\r\n  databaseURL: 'https://prueba-h-b5099.firebaseio.com',\r\n  projectId: 'prueba-h-b5099',\r\n  storageBucket: 'prueba-h-b5099.appspot.com',\r\n  messagingSenderId: '480760190009',\r\n  appId: '1:480760190009:web:71123afad477716c2769e8',\r\n  measurementId: 'G-CP339BM5G5',\r\n});\r\n\r\nvar db = firebaseApp.firestore();\r\n\r\nexport { db };\r\n","import { useState, useEffect } from 'react';\r\nimport { db } from './Firebase';\r\nimport firebase from 'firebase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction Form(props) {\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n  const [movieTitle, setMovieTitle] = useState('');\r\n  const [movieDescription, setMovieDescription] = useState('');\r\n  const [dataShow, setData] = useState([]);\r\n  const cover = props.cover;\r\n  const setCover = props.setCover;\r\n  const relatedMoviesArray = props.relatedMoviesArray;\r\n  const setRelatedMoviesArray = props.setRelatedMoviesArray;\r\n\r\n  // add movies\r\n\r\n  const ref = db.collection('movies');\r\n\r\n  function getMovies() {\r\n    ref.onSnapshot((querySnapshot) => {\r\n      const items = [];\r\n      querySnapshot.forEach((doc) => {\r\n        items.push(doc.data());\r\n      });\r\n      setData(items);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, []);\r\n\r\n  // add movie function\r\n\r\n  function addMovie(newMovie) {\r\n    ref\r\n      .doc(newMovie.id)\r\n      .set(newMovie)\r\n      .then(() => {\r\n        alert('La película se guardó');\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n\r\n    setMovieTitle('');\r\n    setMovieDescription('');\r\n    setCover('');\r\n    setRelatedMoviesArray([]);\r\n  }\r\n\r\n  // get movie id from array of related movies\r\n\r\n  const relatedMovieId = relatedMoviesArray.map((relatedMovie) => {\r\n    return relatedMovie.id;\r\n  });\r\n\r\n  // print selected movies\r\n\r\n  const relatedMoviesList = relatedMoviesArray.map((relatedMovie) => {\r\n    return <li className=\"relatedMovie-list\">{`${relatedMovie.title}, `}</li>;\r\n  });\r\n\r\n  // preventDefault for form\r\n\r\n  const handleSubmitForm = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <p className=\"form-paragraph\">Aqui puedes añadir cualquier película</p>\r\n      <small>\r\n        Por favor añade el título, la descripción, sube una imagen de la\r\n        película y seleccione las películas relacionadas de las películas\r\n        almacenadas. Al final pincha el botón \"Añade la película\".\r\n      </small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={handleSubmitForm}\r\n        onSubmit={() =>\r\n          addMovie({\r\n            id: uuidv4(),\r\n            movieTitle: movieTitle,\r\n            movieDescription: movieDescription,\r\n            cover: cover,\r\n            tag: relatedMovieId,\r\n            createdAt: timestamp(),\r\n          })\r\n        }\r\n      >\r\n        <label className=\"form-label\" htmlFor=\"movieTitle\">\r\n          Título de la película:\r\n        </label>\r\n        <input\r\n          className=\"form-input\"\r\n          id=\"movieTitle\"\r\n          type=\"text\"\r\n          placeholder=\"Título\"\r\n          value={movieTitle}\r\n          onChange={(ev) => setMovieTitle(ev.target.value)}\r\n        />\r\n\r\n        <label className=\"form-label\" htmlFor=\"movieDescription\">\r\n          Descripción de la película:\r\n        </label>\r\n        <textarea\r\n          className=\"form-input\"\r\n          id=\"movieDescription\"\r\n          type=\"text\"\r\n          placeholder=\"Descripción\"\r\n          value={movieDescription}\r\n          onChange={(ev) => setMovieDescription(ev.target.value)}\r\n        />\r\n\r\n        <label className=\"form-label\" htmlFor=\"relatedMovies\">\r\n          Películas relacionadas:\r\n        </label>\r\n        <input\r\n          className=\"form-input-hidden\"\r\n          id=\"relatedMovies\"\r\n          type=\"text\"\r\n          placeholder=\"Películas relacionadas\"\r\n          value={relatedMovieId}\r\n          onChange={(ev) => setRelatedMoviesArray(ev.target.value)}\r\n        />\r\n        <ul>{relatedMoviesList}</ul>\r\n        <button className=\"form-button-addMovie\" type=\"submit\">\r\n          Añade la película\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","function Landing() {\r\n  return (\r\n    <div>\r\n      <p className=\"landing-paragraph\">\r\n        Puedes añadir, editar o eliminar películas y su información detallada\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction Search(props) {\r\n  const handleSearch = (event) => {\r\n    props.handleSearchMovie(event.target.name, event.target.value);\r\n  };\r\n\r\n  /* preventDefault for form */\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const searchedMovies = props.searchMovies.map((movie) => {\r\n    return (\r\n      <li key={movie.id} className=\"container-list-search\">\r\n        <h3 className=\"container-heading-search\"> {movie.title}</h3>\r\n        <Link to={`/movie/${movie.id}`}>\r\n          <button className=\"container-search-button\">Más información</button>\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <label className=\"form-label-search\" htmlFor=\"movieSearch\">\r\n          Busca una película:\r\n        </label>\r\n        <input\r\n          className=\"form-input\"\r\n          id=\"movieSearch\"\r\n          name=\"movieName\"\r\n          type=\"text\"\r\n          value={props.movieName}\r\n          placeholder=\"Nombre de la película\"\r\n          onChange={handleSearch}\r\n        />\r\n      </form>\r\n      <ul className=\"container-search\">{searchedMovies}</ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { db } from './Firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ShowMovies(props) {\r\n  const moviesToShow = props.dataToShow.map((data) => {\r\n    return (\r\n      <li key={data.id} id={data.id} className=\"container-list\">\r\n        <h3 className=\"container-heading\"> {data.title}</h3>\r\n        <p className=\"container-paragraph\">\r\n          {data.description.substring(0, 110) + '...'}\r\n        </p>\r\n        <button\r\n          onClick={() => {\r\n            if (window.confirm('¿Seguro que quieres borrar esta película?')) {\r\n              deleteMovie(data);\r\n            }\r\n          }}\r\n          className=\"container-delete\"\r\n        >\r\n          Eliminar\r\n        </button>\r\n        <Link to={`/updateMovie/${data.id}`}>\r\n          <button className=\"container-delete\">Modificar</button>\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  //delete movie function\r\n\r\n  const ref = db.collection('movies');\r\n\r\n  function deleteMovie(movie) {\r\n    ref\r\n      .doc(movie.id)\r\n      .delete()\r\n      .then(() => {\r\n        alert('La película fue borrada');\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"showMovies-heading\">\r\n        Aqui puedes ver todos los pelícilas añadidas y editarlos o eliminarlos\r\n      </h3>\r\n      <p className=\"form-paragraph\">\r\n        Pincha en el botón \"Modificar\" para seleccionar la película que quieres\r\n        modificar. El formulario se rellenará automáticamente.\r\n      </p>\r\n      <ul className=\"container\">{moviesToShow}</ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowMovies;\r\n","function ShowMovies(props) {\r\n  const pageNumbers = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(props.totalMovies / props.moviePerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  const pageNumber = pageNumbers.map((number) => {\r\n    return (\r\n      <li key={number} className=\"pagination-list\">\r\n        <a\r\n          onClick={() => props.paginate(number)}\r\n          href=\"!#\"\r\n          className=\"pagination-link\"\r\n        >\r\n          {number}\r\n        </a>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"pagination-container\">{pageNumber}</ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ShowMovies;\r\n","import { Link } from 'react-router-dom';\r\n\r\nfunction MovieDetails(props) {\r\n  const finalmovies = [];\r\n  const relatedMovies = props.movieFound.tag.map((relatedMovie) => {\r\n    const finalRelatedMovies = props.dataToShow.map((finalRelatedMovie) => {\r\n      if (finalRelatedMovie.id === relatedMovie) {\r\n        finalmovies.push(finalRelatedMovie);\r\n      }\r\n    });\r\n\r\n    return finalmovies;\r\n  });\r\n\r\n  const finalMovie = finalmovies.map((finalMovie) => {\r\n    return (\r\n      <li className=\"container-list-movieDetails\">\r\n        <img src={finalMovie.cover} className=\"container-image\"></img>\r\n        <h3>{finalMovie.title}</h3>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <li className=\"container-moviedetails-list\" key={props.movieFound.id}>\r\n        <img\r\n          src={props.movieFound.cover}\r\n          className=\"container-moviedetails-image\"\r\n        ></img>\r\n        <h3 className=\"container-heading\"> {props.movieFound.title}</h3>\r\n        <p className=\"container-paragraph\">{props.movieFound.description}</p>\r\n      </li>\r\n      <h3>Películas relacionadas:</h3>\r\n      <ul className=\"container\">{finalMovie}</ul>\r\n      <Link to=\"/\" className=\"link\">\r\n        <h4 className=\"form-link\">Volver a la página principal</h4>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n","import React, { Component } from 'react';\r\nimport Carousel from 'react-elastic-carousel';\r\n\r\nfunction LastFiveMovies(props) {\r\n  // lastFiveMovies slider\r\n\r\n  let lastFiveMovies = props.dataToShow.slice(\r\n    Math.max(props.dataToShow.length - 5, 1)\r\n  );\r\n\r\n  const slider = lastFiveMovies.map((lastmovie) => {\r\n    return (\r\n      <li className=\"container-list\">\r\n        <img src={lastmovie.cover} className=\"container-image\"></img>\r\n        <h3 className=\"container-heading\"> {lastmovie.title}</h3>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"container\">\r\n      <h3 className=\"heading\">Las 5 últimas películas añadidas</h3>\r\n      <Carousel>{slider}</Carousel>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default LastFiveMovies;\r\n","import { db } from './Firebase';\r\nimport { useState } from 'react';\r\n\r\nfunction FormUpdate(props) {\r\n  const id = props.movieFound.id;\r\n  const [movieTitle, setMovieTitle] = useState(props.movieFound.title);\r\n  const [movieDescription, setMovieDescription] = useState(\r\n    props.movieFound.description\r\n  );\r\n  const cover = props.cover;\r\n  const setCover = props.setCover;\r\n  const relatedMoviesArray = props.relatedMoviesArray;\r\n  const setRelatedMoviesArray = props.setRelatedMoviesArray;\r\n\r\n  // modify movie function\r\n  const ref = db.collection('movies');\r\n\r\n  function updateMovie(updatedMovie) {\r\n    ref\r\n      .doc(updatedMovie.id)\r\n      .update(updatedMovie)\r\n      .then(() => {\r\n        alert('La película ha sido cambiada');\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n\r\n    setMovieTitle('');\r\n    setMovieDescription('');\r\n    setCover('');\r\n    setRelatedMoviesArray([]);\r\n  }\r\n\r\n  // get movie id from array of related movies\r\n\r\n  const relatedMovieId = relatedMoviesArray.map((relatedMovie) => {\r\n    return relatedMovie.id;\r\n  });\r\n\r\n  // print selected movies\r\n\r\n  const relatedMoviesList = relatedMoviesArray.map((relatedMovie) => {\r\n    return <li className=\"relatedMovie-list\">{`${relatedMovie.title}, `}</li>;\r\n  });\r\n\r\n  // preventDefault for form\r\n\r\n  const handleSubmitForm = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={handleSubmitForm}\r\n        onSubmit={() =>\r\n          updateMovie({\r\n            movieTitle: movieTitle,\r\n            movieDescription: movieDescription,\r\n            cover: cover,\r\n            tag: relatedMovieId,\r\n            id: id,\r\n          })\r\n        }\r\n      >\r\n        <label className=\"form-label\" htmlFor=\"movieTitle\">\r\n          Título de la película:\r\n        </label>\r\n        <input\r\n          className=\"form-input\"\r\n          id=\"movieTitle\"\r\n          type=\"text\"\r\n          placeholder=\"Título\"\r\n          value={movieTitle}\r\n          onChange={(ev) => setMovieTitle(ev.target.value)}\r\n        />\r\n\r\n        <label className=\"form-label\" htmlFor=\"movieDescription\">\r\n          Descripción de la película:\r\n        </label>\r\n        <textarea\r\n          className=\"form-input\"\r\n          id=\"movieDescription\"\r\n          type=\"movieDescription\"\r\n          placeholder=\"Descripción\"\r\n          value={movieDescription}\r\n          onChange={(ev) => setMovieDescription(ev.target.value)}\r\n        />\r\n\r\n        <label className=\"form-label\" htmlFor=\"relatedMovies\">\r\n          Películas relacionadas:\r\n        </label>\r\n        <input\r\n          className=\"form-input-hidden\"\r\n          id=\"relatedMovies\"\r\n          type=\"text\"\r\n          placeholder=\"Películas relacionadas\"\r\n          value={relatedMovieId}\r\n          onChange={(ev) => setRelatedMoviesArray(ev.target.value)}\r\n        />\r\n        <ul>{relatedMoviesList}</ul>\r\n        <button className=\"form-button-addMovie\" type=\"submit\">\r\n          Modifica la película\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FormUpdate;\r\n","import { useState } from 'react';\r\n\r\nfunction UploadImage(props) {\r\n  const [image, setImage] = useState('');\r\n  const cover = props.cover;\r\n  const setCover = props.setCover;\r\n\r\n  const uploadImage = () => {\r\n    const data = new FormData();\r\n    data.append('file', image);\r\n    data.append('upload_preset', 'cloudinary-media');\r\n    data.append('cloud_name', 'camilla-bachna');\r\n    fetch('  https://api.cloudinary.com/v1_1/camilla-bachna/image/upload', {\r\n      method: 'post',\r\n      body: data,\r\n    })\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        setCover(data.url);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  console.log(cover);\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label className=\"form-label\" htmlFor=\"movieImage\">\r\n          Imagen de la película:\r\n        </label>\r\n        <input\r\n          className=\"form-input-hidden\"\r\n          id=\"movieImage\"\r\n          type=\"text\"\r\n          placeholder=\"Imagen\"\r\n          value={cover}\r\n          onChange={(ev) => setCover(ev.target.value)}\r\n        />\r\n\r\n        <input\r\n          type=\"file\"\r\n          onChange={(ev) => setImage(ev.target.files[0])}\r\n        ></input>\r\n        <button onClick={uploadImage} className=\"form-button\">\r\n          Subir imagen\r\n        </button>\r\n        <div>\r\n          {' '}\r\n          <img className=\"form-image\" src={cover}></img>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadImage;\r\n","import React, { useState } from 'react';\r\n\r\nfunction RelatedMovies(props) {\r\n  const [isClicked, setClicked] = useState('false');\r\n\r\n  // add related movie by clicking on one\r\n\r\n  const handleClickedMovie = (event) => {\r\n    const clickedMovieId = event.currentTarget.id;\r\n\r\n    const relatedMoviesIndex = props.relatedMoviesArray.findIndex(function (\r\n      relatedMovies\r\n    ) {\r\n      return relatedMovies.id === clickedMovieId;\r\n    });\r\n    if (relatedMoviesIndex === -1) {\r\n      const movieFound = props.dataToShow.find(function (movie) {\r\n        return movie.id === clickedMovieId;\r\n      });\r\n      const newRelatedMoviesArray = [...props.relatedMoviesArray];\r\n      newRelatedMoviesArray.push(movieFound);\r\n      props.setRelatedMoviesArray(newRelatedMoviesArray);\r\n      setClicked(true);\r\n    } else {\r\n      const newRelatedMoviesArray = [...props.relatedMoviesArray];\r\n      newRelatedMoviesArray.splice(relatedMoviesIndex, 1);\r\n      props.setRelatedMoviesArray(newRelatedMoviesArray);\r\n      setClicked(false);\r\n    }\r\n  };\r\n\r\n  // clicked movie\r\n\r\n  function clickedMovies(data) {\r\n    const movieFound = props.relatedMoviesArray.find(function (relatedMovie) {\r\n      return data.id === relatedMovie.id;\r\n    });\r\n    if (movieFound === undefined) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // paint movies\r\n\r\n  const moviesToShow = props.dataToShow.map((data) => {\r\n    let clickedMovie;\r\n    if (clickedMovies(data)) {\r\n      clickedMovie = 'container-list-clicked';\r\n    } else {\r\n      clickedMovie = '';\r\n    }\r\n    return (\r\n      <>\r\n        <li\r\n          key={data.id}\r\n          id={data.id}\r\n          className={`container-list ${clickedMovie}`}\r\n          onClick={handleClickedMovie}\r\n        >\r\n          <h3 className=\"container-heading\"> {data.title}</h3>\r\n          <p className=\"container-paragraph\">\r\n            {data.description.substring(0, 110) + '...'}\r\n          </p>\r\n          <span className=\"container-relatedMovies\">\r\n            Películas relacionadas: {data.relatedMovies}\r\n          </span>\r\n        </li>\r\n      </>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <p className=\"form-paragraph\">\r\n        Por favor haz clic en la película que deseas seleccionar como película\r\n        relacionada.\r\n      </p>\r\n      <div className=\"container-search\">{moviesToShow}</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RelatedMovies;\r\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { db } from './Firebase';\nimport Form from './Form';\nimport Landing from './Landing';\nimport Search from './Search';\nimport ShowMovies from './ShowMovies';\nimport Pagination from './Pagination';\nimport MovieDetails from './MovieDetails';\nimport LastFiveMovies from './LastFiveMovies';\nimport FormUpdate from './FormUpdate';\nimport UploadImage from './UploadImage';\nimport RelatedMovies from './RelatedMovies';\nimport '../stylesheets/App.css';\n\nfunction App() {\n  const [movieName, setmovieName] = useState('');\n  const [dataToShow, setData] = useState([]);\n  const [cover, setCover] = useState('');\n  const [relatedMoviesArray, setRelatedMoviesArray] = useState([]);\n\n  // Pagination\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [moviePerPage] = useState(10);\n\n  // Fetch the data from firebase\n\n  useEffect(() => {\n    const unsubscribe = db\n      .collection('movies')\n      .orderBy('createdAt')\n      .onSnapshot(function (querySnapshot) {\n        const data = [];\n        querySnapshot.forEach((doc) => {\n          data.push({\n            id: doc.data().id,\n            title: doc.data().movieTitle,\n            description: doc.data().movieDescription,\n            cover: doc.data().cover,\n            tag: doc.data().tag,\n          });\n        });\n        setData(data);\n      });\n\n    // Cleanup function\n\n    return () => unsubscribe();\n  }, []);\n\n  // search movie\n\n  const handleSearchMovie = (inputKey, inputValue) => {\n    if (inputKey === 'movieName') {\n      setmovieName(inputValue);\n    }\n  };\n\n  const searchMovies = dataToShow.filter((movieSearched) => {\n    return movieSearched.title.toLowerCase().includes(movieName.toLowerCase());\n  });\n\n  // Pagination\n\n  const indexOfLastMovie = currentPage * moviePerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviePerPage;\n  const currentMovie = searchMovies.slice(indexOfFirstMovie, indexOfLastMovie);\n\n  // change page\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  // route movie details\n\n  const renderDetail = (routerProps) => {\n    const routerMovieId = routerProps.match.params.id;\n\n    const movieFound = dataToShow.find((movie) => movie.id === routerMovieId);\n\n    // paint details of movies\n\n    if (movieFound) {\n      return (\n        <MovieDetails\n          movieFound={movieFound}\n          cover={cover}\n          dataToShow={dataToShow}\n        ></MovieDetails>\n      );\n    }\n  };\n\n  // route update movie\n\n  const updateMovie = (routerProps) => {\n    const routerMovieId = routerProps.match.params.id;\n\n    const movieFound = dataToShow.find((movie) => movie.id === routerMovieId);\n\n    // paint details of movies\n\n    if (movieFound) {\n      return (\n        <>\n          <FormUpdate\n            movieFound={movieFound}\n            cover={cover}\n            setCover={setCover}\n            relatedMoviesArray={relatedMoviesArray}\n            setRelatedMoviesArray={setRelatedMoviesArray}\n          />\n          <UploadImage cover={cover} setCover={setCover} />\n          <RelatedMovies\n            dataToShow={dataToShow}\n            relatedMoviesArray={relatedMoviesArray}\n            setRelatedMoviesArray={setRelatedMoviesArray}\n          />\n\n          <Link to=\"/showMovie\" className=\"link\">\n            <h4 className=\"form-link\">Volver a ver todas las películas</h4>\n          </Link>\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"main-container\">\n      <header className=\"header\">\n        <h1>Pagina para cargar/modificar una película</h1>\n        <nav className=\"navigation\">\n          <ul className=\"navigation__list\">\n            <li className=\"navigation__list--item\">\n              <Link to=\"/addMovie\">\n                <span className=\"navigation__list--button\">\n                  Añadir una película\n                </span>\n              </Link>\n            </li>\n            <li className=\"navigation__list--item\">\n              <Link to=\"/\">\n                <span className=\"navigation__list--button\">\n                  Volver a la página principal\n                </span>\n              </Link>\n            </li>\n            <li className=\"navigation__list--item\">\n              <Link to=\"/showMovie\">\n                <span className=\"navigation__list--button\">\n                  Editar o eliminar las películas\n                </span>\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      </header>\n      <main className=\"main\">\n        <Switch>\n          <Route exact path=\"/\">\n            <LastFiveMovies dataToShow={dataToShow} />\n            <div className=\"landing\">\n              <Landing />\n              <Search\n                handleSearchMovie={handleSearchMovie}\n                movieName={movieName}\n                searchMovies={currentMovie}\n              />\n              <Pagination\n                moviePerPage={moviePerPage}\n                totalMovies={searchMovies.length}\n                paginate={paginate}\n              />\n            </div>\n          </Route>\n          <Route path=\"/movie/:id\" render={renderDetail}></Route>\n          <Route path=\"/addMovie\">\n            <Form\n              dataToShow={dataToShow}\n              cover={cover}\n              setCover={setCover}\n              relatedMoviesArray={relatedMoviesArray}\n              setRelatedMoviesArray={setRelatedMoviesArray}\n            />\n            <UploadImage cover={cover} setCover={setCover} />\n            <RelatedMovies\n              dataToShow={dataToShow}\n              relatedMoviesArray={relatedMoviesArray}\n              setRelatedMoviesArray={setRelatedMoviesArray}\n            />\n\n            <Link to=\"/\" className=\"link\">\n              <h4 className=\"form-link\">Volver a la página principal</h4>\n            </Link>\n          </Route>\n          <Route path=\"/updateMovie/:id\" render={updateMovie}></Route>\n          <Route path=\"/showMovie\">\n            <ShowMovies dataToShow={dataToShow} />\n            <Link to=\"/\" className=\"link\">\n              <h4 className=\"form-link\">Volver a la página principal</h4>\n            </Link>\n          </Route>\n        </Switch>\n      </main>\n      <footer className=\"footer\">\n        <small>Camilla &copy; 2021</small>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}